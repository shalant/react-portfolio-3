{"version":3,"sources":["components/Footer.js","components/Hero.js","components/CardInfo.js","components/Card.js","assets/images/dynamicWine.png","assets/images/informedTrades.png","assets/images/employeeDirectory.png","assets/images/SchedulerAppScreenshot.png","components/Carousel.js","components/Card2.js","components/Deck.js","components/ControlledCarousel.js","pages/HomePage.js","components/Content.js","pages/AboutPage.js","pages/ContactPage.js","components/Resume.js","assets/images/DouglasRosenbergResume1.pdf","App.js","assets/images/adam-przeniewski-SwBG6zKsXQI-unsplash.jpg","reportWebVitals.js","index.js"],"names":["Footer","className","Container","fluid","Row","Col","md","sm","Hero","props","Jumbotron","title","subTitle","text","CardInfo","style","useSpring","opacity","from","div","href","link","target","rel","Card","onClick","e","click","item","src","imgSrc","alt","selected","React","Component","styles","card","id","card_img","picsum","margin","padding","width","height","position","top","left","transform","maxWidth","maxHeight","memo","view_port","overflow","images_container","nav_buttons_container","display","flexDirection","justifyContent","alignItems","pointerEvents","zIndex","nav_button","cursor","selection_buttons_container","bottom","selection_button","marginRight","borderRadius","backgroundColor","ControlledCarousel","useState","index","setIndex","activeIndex","onSelect","selectedIndex","Item","dynamicWine","Caption","informedTrades","employeeDirectory","HomePage","subtitle","Content","children","AboutPage","ContactPage","handleChange","event","value","type","checked","name","setState","handleSubmit","preventDefault","disabled","Axios","post","state","then","res","data","success","emailSent","catch","err","email","message","this","emailManual","Form","onSubmit","Group","Label","htmlFor","Control","onChange","as","rows","Button","variant","Resume","App","headerLinks","path","home","about","contact","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","classname","Nav","to","exact","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bf82b631.chunk.js","sourcesContent":["import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction Footer() {\r\n\r\n    return(\r\n        <footer className='mt-5'>\r\n            <Container fluid={true}>\r\n                <Row className='border-top justify-content-between p-3'>\r\n                    <Col className='p=0' md={3} sm={12}>\r\n                        Doug Rosenberg\r\n                    </Col>\r\n                    <Col className='p=0 d-flex fustify-content-end' md={3}>\r\n                        This site was made by Doug Rosenberg\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Jumbotron, Container, Row, Col } from 'react-bootstrap';\r\nimport './components.css';\r\n\r\nfunction Hero(props) {\r\n    \r\n    \r\n    return(\r\n        <Jumbotron className='bg-transparent jumbotron-fluid p=0'>\r\n            <Container fluid={true}>\r\n                <Row className='justify-content-center align-items-center py-5'>\r\n                    <Col md={8} sm={12}>\r\n                        { props.title && <h1 className='display-1 headline font-weight-bolder'>{props.title}</h1> }\r\n                        { props.subTitle && <h3 className='display-4 font-weight-light'>{props.subTitle}</h3> }\r\n                        { props.text && <h3 className='lead font-weight-light'>{props.text}</h3> }\r\n                    </Col>\r\n    \r\n                </Row>\r\n    \r\n            </Container>\r\n    \r\n        </Jumbotron>\r\n            \r\n    )\r\n}\r\n\r\nexport default Hero;","import React from 'react';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\n\r\n\r\nfunction CardInfo(props) {\r\n    \r\n    const style = useSpring({opacity: 1, from: {opacity: 0}})\r\n\r\n    return(\r\n        <animated.div className='d-card-info' style={style}>\r\n            <p className='d-card-title'>{props.title}</p>\r\n            <p className='d-card-sub-title'>{props.subTitle}</p>\r\n            <a href={props.link} target='_blank' rel='noopener noreferrer' >View</a>\r\n        </animated.div>\r\n    );\r\n\r\n}\r\n\r\nexport default CardInfo;","import React from 'react';\r\nimport CardInfo from '../components/CardInfo'\r\n\r\nfunction Card(props) {\r\n\r\n    return(\r\n        <div className='d-inline-block d-card special' onClick={(e) => props.click(props.item)}>\r\n            <img className='d-card-image' src={props.item.imgSrc} alt={props.item.imgSrc} />\r\n            { props.item.selected && <CardInfo title={props.item.title} subTitle={props.item.subTitle} link={props.item.link} /> }\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Card;","export default __webpack_public_path__ + \"static/media/dynamicWine.332ca2f6.png\";","export default __webpack_public_path__ + \"static/media/informedTrades.103e57f5.png\";","export default __webpack_public_path__ + \"static/media/employeeDirectory.efc728f2.png\";","export default __webpack_public_path__ + \"static/media/SchedulerAppScreenshot.ebf88a22.png\";","import React from 'react';\r\nimport Card from './Card'\r\nimport dynamicWine from '../assets/images/dynamicWine.png'\r\nimport informedTrades from '../assets/images/informedTrades.png'\r\nimport employeeDirectory from '../assets/images/employeeDirectory.png'\r\nimport SchedulerAppScreenshot from '../assets/images/SchedulerAppScreenshot.png'\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport './components.css';\r\n\r\nclass Carousel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            items: [\r\n                {\r\n                    id: 0,\r\n                    title: \"Dynamic Wine\",\r\n                    subTitle: \"Final MERN project of NorthWestern Coding Bootcamp\",\r\n                    imgSrc: dynamicWine,\r\n                    link: 'https://github.com/carolinetwyman/dynamicwine',\r\n                    selected: true\r\n                },\r\n                {\r\n                    id: 1,\r\n                    title: \"Informed Trades\",\r\n                    subTitle: \"First group project, using 2 separate API calls\",\r\n                    imgSrc: informedTrades,\r\n                    link: 'https://shalant.github.io/Informed_Trades',\r\n                    selected: false\r\n\r\n                },\r\n                {\r\n                    id: 2,\r\n                    title: \"Employee Directory\",\r\n                    subTitle: \"A first React project, utilizing sorting functionality\",\r\n                    imgSrc: employeeDirectory,\r\n                    link: 'https://github.com/shalant/employee_directory_react',\r\n                    selected: false\r\n\r\n                },\r\n                {\r\n                    id: 3,\r\n                    title: \"Scheduler App\",\r\n                    subTitle: \"An intermediate Javascript project using some cool stuff\",\r\n                    imgSrc: SchedulerAppScreenshot,\r\n                    link: 'https://github.com/shalant/SchedulerApp',\r\n                    selected: false\r\n\r\n                },\r\n            ]\r\n        }\r\n    }\r\n\r\nhandleCardClick = (id, card) => {\r\n    let items = [...this.state.items];\r\n\r\n    items[id].selected = items[id].selected ? false : true;\r\n\r\n    items.forEach(item => {\r\n        if(item.id !== id) {\r\n            item.selected = false;\r\n        }\r\n    });\r\n\r\n    this.setState({\r\n        items\r\n    });\r\n}\r\n\r\nmakeItems = (items) => {\r\n    return items.map(item => {\r\n        return <Card item={item} click={(e => this.handleCardClick(item.id, e))} key={item.id} />\r\n    })\r\n}\r\n\r\n\r\nrender() {\r\n    return (\r\n        <Container fluid={true}>\r\n            <Row className='carousel-styles'>\r\n                {this.makeItems(this.state.items)}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default Carousel;","import React from 'react';\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div style={styles.card} id={props.id}>\r\n            <img style={styles.card_img} src={props.picsum} alt='rando' />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    card: {\r\n        margin: 0,\r\n        padding: 0,\r\n        width: 'inherit',\r\n        height: 'inherit',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n    card_img: {\r\n        maxWidth: '100%',\r\n        maxHeight: '100%',\r\n        position: 'relative',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n}\r\n\r\nexport default React.memo(Card);\r\n","import React, { Component, Fragment } from 'react';\r\nimport Card2 from './Card2';\r\n\r\nclass Deck extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //a larger image will cause the radio buttons to go up and down, TODO: figure out how to keep images the same size\r\n        this.state = {\r\n            cards: [\r\n                <Card2 picsum={`https://picsum.photos/800/350`} id='one' key='one' />,\r\n                <Card2 picsum={`https://picsum.photos/800/352`} id='two' key='two' />,\r\n                <Card2 picsum={`https://picsum.photos/800/353`} id='three' key='three' />,\r\n                <Card2 picsum={`https://picsum.photos/800/354`} id='four' key='four' />\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.number_of_cards_by_index = this.images.children.length -1;\r\n        this.middle_card_by_index = Math.floor(this.number_of_cards_by_index / 2);\r\n        this.current_card = this.middle_card_by_index;\r\n\r\n        /* *********** Responsive Code ************* */\r\n        let img_width_as_percentage = 50;\r\n        //img_width_as_percentage = window.innerWidth < 768 ? 100 : img_width_as_percentage;\r\n        let nav_buttons_placement_as_percentage = 60;\r\n        //nav_buttons_placement_as_percentage = window.innerWidth < 768 ? 100 : nav_buttons_placement_as_percentage;\r\n\r\n\r\n        this.new_width = \r\n            /Android|webOS|iPhone|iPad|iPod|Blackberry|IEMobile|Opera Mini/i.test(navigator.userAgent) ?\r\n                (img_width_as_percentage / 100) * window.screen.width :\r\n                (img_width_as_percentage / 100) * window.innerWidth;\r\n\r\n        this.view_port.style.width = `${this.new_width}px`;\r\n        this.nav_buttons_container.style.width = `${nav_buttons_placement_as_percentage}vw`;\r\n        this.button_prev.style.width = `${(this.new_width / 2) * 0.30}px`;\r\n        this.button_next.style.width = `${(this.new_width / 2) * 0.30}px`;\r\n\r\n        this.selection_buttons_container.style.bottom = `${this.view_port.getBoundingClientRect().top}px`\r\n        for (let i = 0; i < this.images.children.length; i++) {\r\n            this.selection_buttons_container.children[i].transitionDuration = '0.0s';\r\n            this.selection_buttons_container.children[i].style.width = `${this.new_width * 0.05}`;\r\n            this.selection_buttons_container.children[i].style.height = `${this.new_width * 0.05}`;\r\n        }\r\n\r\n        this.order_cards();\r\n        this.update_selection();\r\n\r\n        window.addEventListener('resize', () => {\r\n            let img_width_as_percentage = 50;\r\n            //img_width_as_percentage = window.innerWidth < 768 ? 100 : img_width_as_percentage;\r\n            nav_buttons_placement_as_percentage = 60;\r\n            //nav_buttons_placement_as_percentage = window.innerWidth < 768 ? 100 : nav_buttons_placement_as_percentage;\r\n\r\n            \r\n            this.new_width = \r\n                /Android|webOS|iPhone|iPad|iPod|Blackberry|IEMobile|Opera Mini/i.test(navigator.userAgent) ?\r\n                    (img_width_as_percentage / 100) * window.screen.width :\r\n                    (img_width_as_percentage / 100) * window.innerWidth;\r\n    \r\n            this.view_port.style.width = `${this.new_width}px`;\r\n            this.button_prev.style.width = `${(this.new_width / 2) * 0.30}px`;\r\n            this.button_next.style.width = `${(this.new_width / 2) * 0.30}px`;\r\n    \r\n            this.selection_buttons_container.style.bottom = `${this.view_port.getBoundingClientRect().top}px`\r\n            for (let i = 0; i < this.images.children.length; i++) {\r\n                this.selection_buttons_container.children[i].transitionDuration = '0.0s';\r\n                this.selection_buttons_container.children[i].style.width = `${this.new_width * 0.05}`;\r\n                this.selection_buttons_container.children[i].style.height = `${this.new_width * 0.05}`;\r\n            }\r\n\r\n            this.order_cards();\r\n\r\n            this.right_boundary = parseFloat(this.images.children[this.number_of_cards_by_index].style.left) + this.new_width;\r\n            this.left_boundary = parseFloat(this.images.children[0].style.left) - this.new_width;\r\n\r\n            for (let i = 0; i < this.images.children.length; i++) {\r\n                this.last_positions[i] = parseFloat(this.images.children[i].style.left);\r\n            }\r\n        });\r\n        /* ************************ */\r\n\r\n        this.last_positions = [];\r\n        this.right_boundary = parseFloat(this.images.children[this.number_of_cards_by_index].style.left) + this.new_width;\r\n        this.left_boundary = parseFloat(this.images.children[0].style.left) - this.new_width;\r\n\r\n\r\n        for (let i = 0; i < this.images.children.length; i++) {\r\n            this.last_positions.push(parseFloat(this.images.children[i].style.left));\r\n        }\r\n\r\n        /* *********** Button Navigation ************* */\r\n        this.scroll_in_progress = false;\r\n\r\n        /* ********** Autoplay Code ************** */\r\n        this.autoplay_timeout_id = null;\r\n        this.autoplay_interval_id = null;\r\n        /***************************************** */\r\n\r\n        /******************* INIT CODE ************************ */\r\n        this.selection_buttons_container.children[0].click();\r\n    }\r\n//add stylings for whatever radio is active and non-active\r\n    update_selection = () => {\r\n        for (let i = 0; i < this.images.children.length; i++) {\r\n            if (i === this.current_card) {\r\n                this.selection_buttons_container.children[i].style.backgroundColor = 'red';\r\n            } else {\r\n                this.selection_buttons_container.children[i].style.backgroundColor = 'grey';\r\n        }\r\n    }\r\n}\r\n\r\n    order_cards = () => {\r\n        //const card_width = parseFloat(getComputedStyle(this.images.children[0]).width);\r\n        let counter_for_right = 1,\r\n            counter_for_left = this.middle_card_by_index;\r\n\r\n        for (let i = 0; i < this.images.children.length; i++) {\r\n            this.images.children[i].style.transitionDuration = '0.0s';\r\n\r\n            if (i < this.middle_card_by_index) {\r\n                this.images.children[i].style.left = `-${(counter_for_left * this.new_width) - (this.new_width / 2)}px`;\r\n                counter_for_left--;\r\n            } else if (i > this.middle_card_by_index) {\r\n                this.images.children[i].style.left = `${(counter_for_right * this.new_width) + (this.new_width / 2)}px`;\r\n                counter_for_right++;\r\n            } else {\r\n                this.images.children[i].style.left = `${(this.new_width / 2)}px`;\r\n            }\r\n        }\r\n    }\r\n\r\n    handle_boundaries = () => {\r\n        if (this.last_positions[0] <= this.left_boundary) {\r\n            const end_of_deck = this.last_positions[this.number_of_cards_by_index] + this.new_width;\r\n\r\n            this.images.children[0].style.left = `${end_of_deck}px`;\r\n            this.last_positions[0] = end_of_deck;\r\n\r\n            this.images.appendChild(this.images.children[0], this.images.children[this.number_of_cards_by_index]);\r\n            this.last_positions.splice(this.number_of_cards_by_index, 0, this.last_positions.shift());\r\n        }\r\n        if (this.last_positions[this.number_of_cards_by_index] >= this.right_boundary) {\r\n            const beginning_of_deck = this.last_positions[0] - this.new_width;\r\n\r\n            this.images.children[this.number_of_cards_by_index].style.left = `${beginning_of_deck}px`;\r\n            this.last_positions[this.number_of_cards_by_index] = beginning_of_deck;\r\n\r\n            this.images.insertBefore(this.images.children[this.number_of_cards_by_index], this.images.children[0]);\r\n            this.last_positions.splice(0, 0, this.last_positions.pop());\r\n        }\r\n    }\r\n\r\n        /* *********** Button Navigation ************* */\r\n\r\n    handle_next = () => {\r\n        if (this.scroll_in_progress) return;\r\n\r\n        this.scroll_in_progress = true;\r\n\r\n        for (let i = 0; i < this.images.children.length; i++) {\r\n            this.images.children[i].style.transitionDuration = '0.0s';\r\n\r\n            const updated_position = this.last_positions[i] - this.new_width;\r\n\r\n            this.images.children[i].style.left = `${updated_position}px`;\r\n            this.last_positions[i] = updated_position;\r\n        }\r\n\r\n        this.current_card = (this.current_card === this.number_of_cards_by_index) ? 0 : ++this.current_card;\r\n\r\n        this.handle_boundaries();\r\n        this.update_selection();\r\n\r\n        setTimeout(() => {\r\n            this.scroll_in_progress = false;\r\n            this.start_autoplay();\r\n        }, 200);\r\n    }\r\n\r\n        handle_prev = () => {\r\n            if (this.scroll_in_progress) return;\r\n    \r\n            this.scroll_in_progress = true;\r\n    \r\n            for (let i = 0; i < this.images.children.length; i++) {\r\n                this.images.children[i].style.transitionDuration = '0.0s';\r\n    \r\n                const updated_position = this.last_positions[i] + this.new_width;\r\n    \r\n                this.images.children[i].style.left = `${updated_position}px`;\r\n                this.last_positions[i] = updated_position;\r\n            }\r\n\r\n        this.current_card = (this.current_card === 0) ? this.number_of_cards_by_index : --this.current_card;\r\n\r\n        this.handle_boundaries();\r\n        this.update_selection();\r\n\r\n        setTimeout(() => {\r\n            this.scroll_in_progress = false;\r\n        }, 200);\r\n    }\r\n\r\n       /* ************************ */   \r\n       /* ********** Selection Navigation ************** */ \r\n    handleSelection = event => {\r\n        if (event.target === this.selection_buttons_container) return;\r\n        \r\n        let new_card = null;\r\n\r\n        for (let i = 0; i < this.images.children.length; i++) {\r\n            if (event.target === this.selection_buttons_container.children[i]) new_card = i;\r\n        }\r\n\r\n        for (let i = 0; i < this.images.children.length; i++) {\r\n            const updated_position = this.last_positions[i] + ((this.current_card - new_card) * this.new_width);\r\n\r\n            this.images.children[i].style.transitionDuration = '0.0s';\r\n            this.images.children[i].style.left = `${updated_position}px`;\r\n            this.last_positions[i] = updated_position;\r\n        }\r\n\r\n        for (let i = 0; i < Math.abs(this.current_card - new_card); i++) {\r\n            this.handle_boundaries();\r\n        }\r\n\r\n        this.current_card = new_card;\r\n\r\n        this.update_selection();\r\n        this.start_autoplay();\r\n    }\r\n         /* ************************ */\r\n\r\n          /* ********** Autoplay Code ************** */\r\n    start_autoplay = () => {\r\n        clearTimeout(this.autoplay_timeout_id);\r\n        clearInterval(this.autoplay_interval_id);\r\n\r\n        this.autoplay_timeout_id = setTimeout(() => {\r\n            this.autoplay_interval_id = setInterval(() => {\r\n                for (let i = 0; i < this.images.children.length; i++) {\r\n                    this.images.children[i].style.transitionDuration = '0.0s';\r\n                \r\n                    const updated_position = this.last_positions[i] - this.new_width;\r\n                \r\n                    this.images.children[i].style.left = `${updated_position}px`;\r\n                    this.last_positions[i] = updated_position;\r\n                }\r\n                \r\n                this.current_card = (this.current_card === this.number_of_cards_by_index) ? 0 : ++this.current_card;\r\n                \r\n                this.handle_boundaries();\r\n                this.update_selection();\r\n            }, 1100)\r\n        }, 1200)\r\n    }\r\n           /* ************************ */\r\n\r\n    render () {\r\n        return (\r\n            <Fragment>\r\n                <div ref={ref_id => this.nav_buttons_container = ref_id} style={styles.nav_buttons_container}>\r\n                    <img onClick={this.handle_prev} ref={ref_id => this.button_prev = ref_id} style={styles.nav_button} src='./left-chevron.png' alt='prev' />\r\n                    <img onClick={this.handle_next} ref={ref_id => this.button_next = ref_id} style={styles.nav_button} src='./right-chevron.png' alt='next' id='next'></img>\r\n                </div>\r\n                <div ref={ref_id => this.view_port = ref_id} style={styles.view_port}>\r\n                    <div ref={ref_id => this.images = ref_id} style={styles.images_container}>\r\n                        {this.state.cards}\r\n                    </div>\r\n                </div>\r\n                <div onClick={this.handleSelection} ref={ref_id => this.selection_buttons_container = ref_id} style={styles.selection_buttons_container}>\r\n                    {\r\n                        this.state.cards.map((_, i) => {\r\n                            return (<div style={styles.selection_button} key={i}></div>)\r\n                        })\r\n                    }   \r\n\r\n                </div>\r\n            </Fragment>\r\n        )  \r\n    }\r\n}\r\n\r\nconst styles = {\r\n    view_port: {\r\n        margin: 0,\r\n        padding: 0,\r\n        width: '500px',\r\n        height: '300px',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        overflow: 'hidden',\r\n        //backgroundColor: 'red'\r\n    },\r\n    images_container: {\r\n        margin: 0,\r\n        padding: 0,\r\n        width: 'inherit',\r\n        height: 'inherit',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n    nav_buttons_container: {\r\n        margin: 0,\r\n        padding: 0,\r\n        width: '100vw',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        transform: 'translate(-50%, -50%)',\r\n        pointerEvents: 'none',\r\n        zIndex: 9999\r\n    },\r\n    nav_button: {\r\n        width: '50%',\r\n        height: 'auto',\r\n        pointerEvents: 'all',\r\n        cursor: 'pointer'\r\n    },\r\n    selection_buttons_container: {\r\n        margin: 0,\r\n        padding: 0,\r\n        width: 'fit-content',\r\n        height: 'fit-content',\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        left: '50%',\r\n        transform: 'translateX(-50%)',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        pointerEvents: 'none',\r\n        zIndex: 9999,\r\n        //backgroundColor: 'rgba(0, 0, 255, 0.4)'\r\n    },\r\n    selection_button: {\r\n        marginRight: '15px',\r\n        padding: 0,\r\n        width: '20px',\r\n        height: '20px',\r\n        borderRadius: \"50%\",\r\n        backgroundColor: 'grey',\r\n        pointerEvents: 'all',\r\n        cursor: 'pointer'\r\n    }\r\n}\r\n\r\nexport default Deck;\r\n","import React, { useState } from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport dynamicWine from '../assets/images/dynamicWine.png'\r\nimport informedTrades from '../assets/images/informedTrades.png'\r\nimport employeeDirectory from '../assets/images/employeeDirectory.png'\r\nimport SchedulerAppScreenshot from '../assets/images/SchedulerAppScreenshot.png';\r\nimport './components.css'\r\n\r\nexport default function ControlledCarousel() {\r\n    const [index, setIndex] = useState(0);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n    \r\n  return (\r\n    <Carousel activeIndex={index} onSelect={handleSelect}>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src={dynamicWine}\r\n          alt=\"Dynamic Wines\"\r\n        />\r\n        <Carousel.Caption >\r\n          <h3 className='black-text'>Dynamic Wines</h3>\r\n          <p className='black-text'>A CRUD app using the MERN stack, helps </p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src={informedTrades}\r\n          alt=\"Second slide\"\r\n        />\r\n\r\n        <Carousel.Caption>\r\n          <h3 className='black-text'>Employee Directory</h3>\r\n          <p className='black-text'>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src={employeeDirectory}\r\n          alt=\"Third slide\"\r\n        />\r\n\r\n        <Carousel.Caption>\r\n          <h3 className='black-text'>Third slide label</h3>\r\n          <p className='black-text'>\r\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n          </p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  );\r\n\r\n\r\n//render(<ControlledCarousel />);\r\n  }","import React from 'react';\r\nimport Hero from '../components/Hero';\r\nimport Carousel from '../components/Carousel';\r\nimport Deck from '../components/Deck';\r\nimport './pages.css';\r\nimport ControlledCarousel from '../components/ControlledCarousel';\r\n\r\nfunction HomePage(props) {\r\n    return(\r\n        <div>\r\n            <Hero title={props.title} subtitle={props.subTitle} text={props.text} />\r\n            <ControlledCarousel />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction Content(props) {\r\n    \r\n    return(\r\n        <Container fluid={true}>\r\n            <Row className='justify-content-center'>\r\n                <Col md={8}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport Hero from '../components/Hero';\r\nimport Content from '../components/Content';\r\nimport './pages.css';\r\n\r\nfunction AboutPage(props) {\r\n    return(\r\n        <div>\r\n            <Hero title={props.title} />\r\n\r\n            <Content>\r\n                <p className='about-me'>Full stack MERN junior developer, just graduated from Northwestern University Coding Bootcamp</p>\r\n\r\n                <p className='about-me'>Recent graduate of the Northwestern University Coding Bootcamp. Specialty in the MERN stack. My favorite aspect of the course was working with classmates in group projects. For the last 20 years of my life I've been a professional musician. Highlights of that career include masterclasses at Princeton, Michigan, and multiple national tours, 20 recordings of original music, reviews in major music publications, etc. I have also taught thousands of private saxophone lessons.</p>\r\n            \r\n                <p></p>\r\n            </Content>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport Hero from '../components/Hero';\r\nimport Content from '../components/Content';\r\nimport { Form } from 'react-bootstrap'\r\nimport { Button } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\n\r\nclass ContactPage extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            message: '',\r\n            disabled: '',\r\n            emailSent: null\r\n        }\r\n    }\r\n    \r\n    handleChange = event => {\r\n\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            disabled: true,\r\n        })\r\n\r\n        Axios.post('http://localhost:3030/api/email', this.state)\r\n            .then(res => {\r\n                if(res.data.success) {\r\n                    this.setState({\r\n                        disabled: false,\r\n                        emailSent: true\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        disabled: false,\r\n                        emailSent: false\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    disabled: false,\r\n                    emailSent: false\r\n                });\r\n            })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Hero \r\n                    title={this.props.title}\r\n                    subtitle={this.props.subTitle} \r\n                />\r\n                <a className='email' href={\"mailto:\" + this.props.emailManual}>email</a>\r\n                <h2 className='email'>doug.rosenberg@gmail.com</h2>\r\n                <Content>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"Full Name\">Full Name</Form.Label>\r\n                            <Form.Control id='full-name' name='name' type='text' value={this.state.name} onChange={this.handleChange}/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                            <Form.Control id='email' name='email' type='email' value={this.state.email} onChange={this.handleChange}/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"message\">Message</Form.Label>\r\n                            <Form.Control id='message' name='message' as='textarea'rows='3' value={this.state.message} onChange={this.handleChange}/>\r\n                        </Form.Group>\r\n\r\n                        <Button className='d-inline-block' variant='primary' type='submit' disabled={this.state.disabled}>\r\n                            Send\r\n                        </Button>\r\n\r\n                        {this.state.emailSent === true && <p className='d-inline success-msg'>Email Sent</p>}\r\n                        {this.state.emailSent === false && <p className='d-inline err-msg'>Email Not Sent</p>}\r\n\r\n                    </Form>\r\n\r\n\r\n                </Content>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactPage;","import React from \"react\";\r\nimport resume from \"../assets/images/DouglasRosenbergResume1.pdf\";\r\nimport './components.css';\r\n\r\nlet URL='https://docs.google.com/document/d/1G1z3cVN6IjHW4M2zVytsoE6g_-fWETb0qTSSZqI05Tk/edit?usp=sharing';\r\n\r\nclass Resume extends React.Component {\r\n  render() {\r\n   return (\r\n     <>\r\n    <a className='resume' href={URL}>Click Here for Google Docs</a>\r\n    {/* <object data={resume} type=\"application/pdf\" width=\"100%\" height=\"800px\"> \r\n        <p>It appears you don't have a PDF plugin for this browser.\r\n        No biggie... you can <a href={resume}>click here to\r\n          download the PDF file.</a></p>  \r\n    </object> */}\r\n    </>\r\n   );\r\n  };\r\n }\r\n\r\n export default Resume;","export default __webpack_public_path__ + \"static/media/DouglasRosenbergResume1.242b3d72.pdf\";","import React from 'react'\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport Container from 'react-bootstrap/Container'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Footer from './components/Footer';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ContactPage from './pages/ContactPage';\nimport Resume from './components/Resume';\nimport WhiteBricks from './assets/images/adam-przeniewski-SwBG6zKsXQI-unsplash.jpg';\nimport Deck from './components/Deck';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: 'Doug Rosenberg',\n      headerLinks: [\n          { title: 'Home', path: '/' },\n          { title: 'About', path: '/about' },\n          { title: 'Contact', path: '/contact' }\n      ],\n      home: {\n        title: 'Experience in Music + Science',\n        subTitle: 'I am great',\n        text: 'Here are some selected projects from my portfolio, click on each for more info:'\n      },\n      about: {\n        title: 'About me',\n        \n      },\n      contact: {\n        title: 'Get in Touch',\n        subTitle: 'doug.rosenberg@gmail.com',\n        emailManual: 'doug.rosenberg@gmail.com'\n      }\n    }\n  }\n\n  render () {\n    return (\n      <Router>\n        <Container \n          className='p-0 details' \n          fluid={true} \n          //style={{ backgroundImage: `url(${WhiteBricks})` }}\n        >\n\n          <Navbar \n            className='border-bottom nav' \n            bg='transparent' \n            expand='lg'>\n            <Navbar.Brand>Doug Rosenberg</Navbar.Brand>\n\n            <Navbar.Toggle className='border-0' aria-controls='navbar-toggle' />\n\n            <Navbar.Collapse classname='nav' id='navbar-toggle'>\n              <Nav className='ml-auto'>\n                <Link className='nav-link' to='/'>Home</Link>\n                <Link className='nav-link' to='/about'>About</Link>\n                <Link className='nav-link' to='/resume'>Resume</Link>\n                <Link className='nav-link' to='/contact'>Contact</Link>\n\n              \n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          \n          <Route path='/' exact render={() => <HomePage \n                  title={this.state.home.title}\n                  subTitle={this.state.home.subTitle}\n                  text={this.state.home.text}\n                  />}\n          />\n\n          <Route path='/about' exact render={() => <AboutPage \n                  title={this.state.about.title}\n                  subTitle={this.state.about.subTitle}\n                  text={this.state.about.text}\n                  />}\n          />\n\n          <Route path='/resume' component={Resume} />\n\n          <Route path='/contact' exact render={() => <ContactPage \n                  title={this.state.contact.title}\n                  subTitle={this.state.contact.subTitle}\n                  text={this.state.contact.text}\n                  />}\n          />\n        \n          <Footer />\n\n        </Container>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/adam-przeniewski-SwBG6zKsXQI-unsplash.489272f5.jpg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import * as serviceWorker from '.serviceWorker'\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}